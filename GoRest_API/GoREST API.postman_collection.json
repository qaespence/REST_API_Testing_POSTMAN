{
	"info": {
		"_postman_id": "bbc8502f-2d2f-49b1-8175-91418b42d4eb",
		"name": "GoREST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Show overview info of the Users listing",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Show the supported verbs of Users",
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ea071d9-bf16-4402-b3c0-59b97e9425c1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?name={{Find_User_Name}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{{Find_User_Name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by gender",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body contains the OK result\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});",
									"pm.test(\"Body does not contain \\\"male\\\" in results\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"\\\"male\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?gender={{Find_User_Gender}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "gender",
									"value": "{{Find_User_Gender}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by DOB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?dob={{Find_User_DOB}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "dob",
									"value": "{{Find_User_DOB}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?email={{Find_User_Email}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "{{Find_User_Email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?phone={{Find_User_Phone}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "phone",
									"value": "{{Find_User_Phone}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by website",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?website={{Find_User_Website}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "website",
									"value": "{{Find_User_Website}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?address={{Find_User_Address}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "address",
									"value": "{{Find_User_Address}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List users by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/?status={{Find_User_Status}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "{{Find_User_Status}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the details of user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Find_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Find_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Return details of user by bad ID (BUGGED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource does not exist.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Bad_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Bad_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user (BUGGED)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"{{Create_User_Firstname}}\",\r\n    \"last_name\": \"{{Create_User_Lastname}}\",\r\n    \"gender\": \"{{Create_User_Gender}}\",\r\n    \"dob\": \"{{Create_User_DOB}}\",\r\n    \"email\": \"{{Create_User_Email}}\",\r\n    \"phone\": \"{{Create_User_Phone}}\",\r\n    \"website\": \"{{Create_User_Website}}\",\r\n    \"address\": \"{{Create_User_Address}}\",\r\n    \"status\": \"{{Create_User_Status}}\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/1930",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"1930"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user using PATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d0ecce0-b7a7-4027-9cae-bcc3b15cfa0a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"last_name\": \"{{Create_User_Lastname}}\",\r\n    \"dob\": \"{{Create_User_DOB}}\",\r\n    \"phone\": \"{{Create_User_Phone}}\",\r\n    \"address\": \"{{Create_User_Address}}\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Update_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Update_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Update a user using PATCH, bad ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d0ecce0-b7a7-4027-9cae-bcc3b15cfa0a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource does not exist.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"last_name\": \"{{Create_User_Lastname}}\",\r\n    \"dob\": \"{{Create_User_DOB}}\",\r\n    \"phone\": \"{{Create_User_Phone}}\",\r\n    \"address\": \"{{Create_User_Address}}\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Bad_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Bad_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user using PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "188b508c-35d1-47f2-9253-e8d715f34e27",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"{{Create_User_Firstname}}\",\r\n    \"last_name\": \"{{Create_User_Lastname}}\",\r\n    \"gender\": \"{{Create_User_Gender}}\",\r\n    \"dob\": \"{{Create_User_DOB}}\",\r\n    \"email\": \"{{Create_User_Email}}\",\r\n    \"phone\": \"{{Create_User_Phone}}\",\r\n    \"website\": \"{{Create_User_Website}}\",\r\n    \"address\": \"{{Create_User_Address}}\",\r\n    \"status\": \"{{Create_User_Status}}\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Update_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Update_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Update a user using PUT, bad ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "188b508c-35d1-47f2-9253-e8d715f34e27",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource does not exist.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"{{Create_User_Firstname}}\",\r\n    \"last_name\": \"{{Create_User_Lastname}}\",\r\n    \"gender\": \"{{Create_User_Gender}}\",\r\n    \"dob\": \"{{Create_User_DOB}}\",\r\n    \"email\": \"{{Create_User_Email}}\",\r\n    \"phone\": \"{{Create_User_Phone}}\",\r\n    \"website\": \"{{Create_User_Website}}\",\r\n    \"address\": \"{{Create_User_Address}}\",\r\n    \"status\": \"{{Create_User_Status}}\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Bad_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Bad_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed1219c5-95c2-4ee4-9823-4e7f60a6e298",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The request was handled successfully and the response contains no body content.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Delete_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Delete_User_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative - Delete the user but bad ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed1219c5-95c2-4ee4-9823-4e7f60a6e298",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource does not exist.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Users_Endpoint}}/{{Bad_User_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Users_Endpoint}}",
								"{{Bad_User_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "posts",
			"item": [
				{
					"name": "Show overview info of the Posts listing",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Show the supported verbs of Posts",
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ea071d9-bf16-4402-b3c0-59b97e9425c1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the details of post by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/{{Find_Post_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								"{{Find_Post_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List posts by user ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/?user_id={{Find_Post_UserID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{Find_Post_UserID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List posts by title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/?title={{Find_Post_Title}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "title",
									"value": "{{Find_Post_Title}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List posts by body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19e8a61a-0c8e-46db-a85f-4bfec4a60202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK. Everything worked as expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/{{Posts_Endpoint}}/?body={{Find_Post_Body}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"{{Posts_Endpoint}}",
								""
							],
							"query": [
								{
									"key": "body",
									"value": "{{Find_Post_Body}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comments",
			"item": []
		},
		{
			"name": "albums",
			"item": []
		},
		{
			"name": "photos",
			"item": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "OCcRe6cGpZXuzm0KhBRaJ_nTUnjt4lbDb6Aa",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0f858c68-b15e-46d0-b47a-12295c536f14",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c0a8a227-b058-43d1-834e-cb727c0d1eda",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "51b697b1-d9ac-439b-936a-be466bccf121",
			"key": "Find_User_Name",
			"value": "john",
			"type": "string"
		},
		{
			"id": "e4cc4063-59ed-4606-9613-48cc82db0e43",
			"key": "Users_Endpoint",
			"value": "public-api/users",
			"type": "string"
		},
		{
			"id": "baffcac9-2b74-4028-b155-582ca6288a90",
			"key": "Create_User_Firstname",
			"value": "Tod",
			"type": "string"
		},
		{
			"id": "ebc73bbe-8920-4630-9714-7676f3a553cf",
			"key": "Create_User_Lastname",
			"value": "Doh",
			"type": "string"
		},
		{
			"id": "419a689d-fd74-4c7a-98c1-595bf058245a",
			"key": "Create_User_Gender",
			"value": "male",
			"type": "string"
		},
		{
			"id": "91ff9efa-4c61-45bb-92b3-cbac06d0bbbe",
			"key": "Create_User_DOB",
			"value": "1977-01-01",
			"type": "string"
		},
		{
			"id": "91ff23c8-696c-4f32-935f-5ab5d2306099",
			"key": "Create_User_Email",
			"value": "tester@test.com",
			"type": "string"
		},
		{
			"id": "8afdbdb7-1e72-4053-9147-106066ddcfcb",
			"key": "Create_User_Phone",
			"value": "(123) 456-7890",
			"type": "string"
		},
		{
			"id": "4c50dfb5-5c2b-4156-9f73-92c292da139d",
			"key": "Create_User_Website",
			"value": "https://www.someplace.com/index.html",
			"type": "string"
		},
		{
			"id": "6a1eeeab-a0ee-4023-a5d3-b5df1e87184d",
			"key": "Create_User_Address",
			"value": "1234 5th Street, New City, CA 90001",
			"type": "string"
		},
		{
			"id": "3f4008d7-7546-463d-b10d-84926fd88c11",
			"key": "Create_User_Status",
			"value": "active",
			"type": "string"
		},
		{
			"id": "9f0d605f-99ba-42c1-95af-1a1c2b43cb3a",
			"key": "Find_User_ID",
			"value": "4",
			"type": "string"
		},
		{
			"id": "28f0ce06-e234-484e-89bf-38bc54b59551",
			"key": "Find_User_Gender",
			"value": "female",
			"type": "string"
		},
		{
			"id": "80b7cc11-bd05-4574-9ce6-3b7dacac2adf",
			"key": "Find_User_DOB",
			"value": "1980",
			"type": "string"
		},
		{
			"id": "c5695f54-43cf-40b8-acbc-0cbaca7f8e66",
			"key": "Find_User_Email",
			"value": "@example",
			"type": "string"
		},
		{
			"id": "15aeb6de-7c1d-4043-93ac-05dda635420b",
			"key": "Find_User_Phone",
			"value": "%2B1",
			"type": "string"
		},
		{
			"id": "c1225fe2-269d-4b5a-a228-b602d4d3536b",
			"key": "Find_User_Website",
			"value": "zieme.com",
			"type": "string"
		},
		{
			"id": "fbda0a00-df49-449e-b281-eb23860bb3c0",
			"key": "Find_User_Address",
			"value": ", CA",
			"type": "string"
		},
		{
			"id": "d00ebc19-ac83-49f9-ba46-4eebf5e32628",
			"key": "Find_User_Status",
			"value": "inactive",
			"type": "string"
		},
		{
			"id": "99584215-3733-4860-a33c-ec805973d6af",
			"key": "Bad_User_ID",
			"value": "4567",
			"type": "string"
		},
		{
			"id": "7176e78a-7311-4b5c-a8dc-d965e10e7c58",
			"key": "Delete_User_ID",
			"value": "123",
			"type": "string"
		},
		{
			"id": "d6c81070-748d-438b-84b6-782a707b0ae6",
			"key": "Update_User_ID",
			"value": "500",
			"type": "string"
		},
		{
			"id": "2b58ae3a-8bd9-433b-9c80-57a3c97635b6",
			"key": "Posts_Endpoint",
			"value": "public-api/posts",
			"type": "string"
		},
		{
			"id": "b35b6890-22d0-40c7-b418-131e720f4c05",
			"key": "Find_Post_ID",
			"value": "4",
			"type": "string"
		},
		{
			"id": "ca323e8c-4680-4690-8e3a-40e288ff959a",
			"key": "Find_Post_UserID",
			"value": "390",
			"type": "string"
		},
		{
			"id": "856c87fe-b11d-4ba0-8300-85d90bc7404c",
			"key": "Find_Post_Title",
			"value": "ipsum",
			"type": "string"
		},
		{
			"id": "fb81106c-c09e-4333-baf0-0125da36976e",
			"key": "Find_Post_Body",
			"value": "consequatur",
			"type": "string"
		}
	]
}